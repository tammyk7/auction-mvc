plugins {
    id 'java'
    id 'checkstyle'
    id 'org.springframework.boot' version '3.0.2'
    id 'io.spring.dependency-management' version '1.1.0'
}

group = 'com.weareadaptive'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = JavaVersion.VERSION_17

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

ext {
    checkstyleVersion = '10.7.0'
    testContainersVersion = '1.16.3'
}

checkstyle {
    maxErrors = 0
    ignoreFailures = false
    configFile = file("../../general/checkstyle.xml")
    showViolations = true
    toolVersion = checkstyleVersion

    configurations {
        checkstyle
    }

    dependencies {
        checkstyle "com.puppycrawl.tools:checkstyle:$checkstyleVersion"
    }
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.flywaydb:flyway-core'
    runtimeOnly 'org.postgresql:postgresql'

    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    testImplementation 'io.rest-assured:rest-assured'
    testImplementation 'io.rest-assured:json-path'
    testImplementation 'io.rest-assured:xml-path'
    testImplementation 'com.github.javafaker:javafaker:1.0.2'
    testImplementation "org.testcontainers:testcontainers:$testContainersVersion"
    testImplementation "org.testcontainers:junit-jupiter:$testContainersVersion"
    testImplementation "org.testcontainers:postgresql:$testContainersVersion"
}

tasks.named('test') {
    useJUnitPlatform()
}

defaultTasks 'build'